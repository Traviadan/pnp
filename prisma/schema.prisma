// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "sqlite"
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  email      String?     @unique
  password   String
  groups     Group[]
  sessions   Session[]
  characters Character[]
  favorite   Favorite[]
}

model Group {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Favorite {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Character {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  user       User        @relation(fields: [userId], references: [id])
  userId     Int         @unique
  createdAt  DateTime    @default(now())
  attributes Attribute[]
  skills     Skill[]
  favorite   Favorite[]
}

model Attribute {
  id          Int           @id @default(autoincrement())
  attribute   GameAttribute @relation(fields: [attributeId], references: [id])
  attributeId Int           @unique
  character   Character     @relation(fields: [characterId], references: [id])
  characterId Int           @unique
  value       Int
  valueMax    Int
}

model GameAttribute {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  shortname  String      @unique
  isdefault  Boolean
  attributes Attribute[]
  skills     GameSkill[]
}

model Skill {
  id          Int       @id @default(autoincrement())
  skill       GameSkill @relation(fields: [skillId], references: [id])
  skillId     Int       @unique
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int       @unique
  value       Int
  valueMax    Int
}

model GameSkill {
  id               Int             @id @default(autoincrement())
  name             String          @unique
  gameAttribute    GameAttribute   @relation(fields: [attributeId], references: [id])
  attributeId      Int
  default          Boolean         @default(true)
  skills           Skill[]
  GameSkillGroup   GameSkillGroup? @relation(fields: [gameSkillGroupId], references: [id])
  gameSkillGroupId Int?
}

model GameSkillGroup {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  gameSkills  GameSkill[]
}
